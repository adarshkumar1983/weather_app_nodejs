{"ast":null,"code":"var _jsxFileName = \"/Users/adarshkumar/weather-app/src/components/WeatherComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, Card, CardContent } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1\n  },\n  button: {\n    marginLeft: theme.spacing(2)\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4)\n  },\n  weatherCard: {\n    marginBottom: theme.spacing(2)\n  }\n}));\nconst WeatherApp = () => {\n  _s();\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const fetchWeatherData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5001/weather?location=${location}`);\n      setForecast(response.data.forecast);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n    }\n  };\n\n  // Function to convert temperature from Kelvin to Celsius\n  const kelvinToCelsius = kelvin => {\n    return kelvin - 273.15;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        fetchWeatherData();\n      },\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter city or coordinates\",\n        variant: \"outlined\",\n        fullWidth: true,\n        className: classes.textField,\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: classes.button,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      className: classes.weatherContainer,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"5-Day Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: forecast.list.map((day, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.weatherCard,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                align: \"center\",\n                children: new Date(day.dt * 1000).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"center\",\n                children: [\"Temperature: \", kelvinToCelsius(day.main.temp).toFixed(2), \"\\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                align: \"center\",\n                children: [\"Description: \", day.weather[0].description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"FKfrPf4iVxnnGooHZy22uaV3r1s=\", false, function () {\n  return [useStyles];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","axios","Container","TextField","Button","Typography","makeStyles","Grid","Card","CardContent","jsxDEV","_jsxDEV","useStyles","theme","form","marginTop","spacing","marginBottom","display","alignItems","textField","marginRight","flex","button","marginLeft","weatherContainer","weatherCard","WeatherApp","_s","classes","location","setLocation","forecast","setForecast","error","setError","fetchWeatherData","response","get","data","console","kelvinToCelsius","kelvin","maxWidth","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","className","label","fullWidth","value","onChange","target","color","type","container","list","map","day","index","item","xs","sm","md","Date","dt","toLocaleDateString","main","temp","toFixed","weather","description","_c","$RefreshReg$"],"sources":["/Users/adarshkumar/weather-app/src/components/WeatherComponent.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, Card, CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4),\n  },\n  weatherCard: {\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst WeatherApp = () => {\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n\n  const fetchWeatherData = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5001/weather?location=${location}`);\n      setForecast(response.data.forecast);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n    }\n  };\n\n  // Function to convert temperature from Kelvin to Celsius\n  const kelvinToCelsius = (kelvin) => {\n    return kelvin - 273.15;\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h3\" gutterBottom align=\"center\">Weather App</Typography>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetchWeatherData();\n        }}\n        className={classes.form}\n      >\n        <TextField\n          label=\"Enter city or coordinates\"\n          variant=\"outlined\"\n          fullWidth\n          className={classes.textField}\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          className={classes.button}\n        >\n          Get Weather\n        </Button>\n      </form>\n      {error && <Typography color=\"error\" align=\"center\" className={classes.weatherContainer}>{error}</Typography>}\n      {forecast && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">5-Day Weather Forecast</Typography>\n          <Grid container spacing={2}>\n            {forecast.list.map((day, index) => (\n              <Grid item xs={12} sm={6} md={4} key={index}>\n                <Card className={classes.weatherCard}>\n                  <CardContent>\n                    <Typography variant=\"subtitle1\" align=\"center\">{new Date(day.dt * 1000).toLocaleDateString()}</Typography>\n                    <Typography variant=\"body2\" align=\"center\">Temperature: {kelvinToCelsius(day.main.temp).toFixed(2)}Â°C</Typography>\n                    <Typography variant=\"body2\" align=\"center\">Description: {day.weather[0].description}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}