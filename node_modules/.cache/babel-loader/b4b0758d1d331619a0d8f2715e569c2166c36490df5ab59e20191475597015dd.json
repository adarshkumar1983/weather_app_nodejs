{"ast":null,"code":"var _jsxFileName = \"/Users/adarshkumar/weather-app/src/components/WeatherComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  // Your styles\n}));\nconst WeatherApp = () => {\n  _s();\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius');\n  const [savedLocations, setSavedLocations] = useState([]);\n  useEffect(() => {\n    // Load saved locations from local storage when component mounts\n    const savedLocationsFromStorage = localStorage.getItem('savedLocations');\n    if (savedLocationsFromStorage) {\n      setSavedLocations(JSON.parse(savedLocationsFromStorage));\n    }\n  }, []);\n  useEffect(() => {\n    // Save updated saved locations to local storage whenever it changes\n    localStorage.setItem('savedLocations', JSON.stringify(savedLocations));\n  }, [savedLocations]);\n  const fetchWeatherData = async () => {\n    if (!location.trim()) {\n      setError('Please enter a location.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5001/weather?location=${location}`);\n      console.log('5-Day Weather Forecast:', response.data.forecast.list); // Log the 5-day forecast data\n      setCurrentWeather(response.data.currentWeather);\n      setForecast(response.data.forecast);\n      setError('');\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n      setLoading(false);\n    }\n  };\n  const handleSaveLocation = () => {\n    // Save the current location to the list of saved locations\n    if (location.trim() && !savedLocations.includes(location.trim())) {\n      setSavedLocations([...savedLocations, location.trim()]);\n    }\n  };\n  const handleViewSavedLocation = async savedLocation => {\n    // Fetch weather data for the selected saved location\n    setLocation(savedLocation);\n    await fetchWeatherData();\n  };\n  const kelvinToCelsius = kelvin => {\n    return kelvin - 273.15;\n  };\n  const kelvinToFahrenheit = kelvin => {\n    return kelvin * 9 / 5 - 459.67;\n  };\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit(prevUnit => prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius');\n  };\n  const aggregateDailyTemperatures = list => {\n    const dailyTemperatures = {};\n\n    // Loop through the forecast data\n    list.forEach(item => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0]; // Extract date without time\n\n      // Check if the date key exists in the dailyTemperatures object\n      if (!dailyTemperatures[dateKey]) {\n        // If not, initialize an object for the date\n        dailyTemperatures[dateKey] = {\n          max: -Infinity,\n          // Initialize max temperature to negative infinity\n          min: Infinity // Initialize min temperature to positive infinity\n        };\n      }\n\n      // Update max temperature if current temperature is higher\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n\n      // Update min temperature if current temperature is lower\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n    return dailyTemperatures;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        fetchWeatherData();\n      },\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter city or coordinates\",\n        variant: \"outlined\",\n        fullWidth: true,\n        className: classes.textField,\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: classes.button,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: handleSaveLocation,\n        className: classes.button,\n        children: \"Save Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      className: classes.weatherItem,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loadingIndicator,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.weatherItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Temperature: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C' : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Description: \", currentWeather.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"5-Day Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        justify: \"center\",\n        children: Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.weatherItem,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"h6\",\n              children: new Date(date).toLocaleDateString('en-US', {\n                weekday: 'short'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: [\"Max: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: [\"Min: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this)\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Saved Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      justify: \"center\",\n      children: savedLocations.map((savedLocation, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          onClick: () => handleViewSavedLocation(savedLocation),\n          children: savedLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: toggleTemperatureUnit,\n        children: [\"Toggle Temperature Unit (\", temperatureUnit, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"dmleZMgPsK2R6HhA0jRe4yFPHsk=\", false, function () {\n  return [useStyles];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","TextField","Button","Typography","makeStyles","Grid","CircularProgress","jsxDEV","_jsxDEV","useStyles","theme","WeatherApp","_s","classes","location","setLocation","forecast","setForecast","error","setError","currentWeather","setCurrentWeather","loading","setLoading","temperatureUnit","setTemperatureUnit","savedLocations","setSavedLocations","savedLocationsFromStorage","localStorage","getItem","JSON","parse","setItem","stringify","fetchWeatherData","trim","response","get","console","log","data","list","handleSaveLocation","includes","handleViewSavedLocation","savedLocation","kelvinToCelsius","kelvin","kelvinToFahrenheit","toggleTemperatureUnit","prevUnit","aggregateDailyTemperatures","dailyTemperatures","forEach","item","forecastDate","Date","dt","dateKey","toISOString","split","max","Infinity","min","main","temp_max","temp_min","maxWidth","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","className","form","label","fullWidth","textField","value","onChange","target","color","type","button","onClick","weatherItem","loadingIndicator","weatherContainer","temp","toFixed","weather","description","container","spacing","justify","Object","entries","map","date","temperatures","toLocaleDateString","weekday","index","style","textAlign","marginTop","_c","$RefreshReg$"],"sources":["/Users/adarshkumar/weather-app/src/components/WeatherComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  // Your styles\n}));\n\nconst WeatherApp = () => {\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius');\n  const [savedLocations, setSavedLocations] = useState([]);\n\n  useEffect(() => {\n    // Load saved locations from local storage when component mounts\n    const savedLocationsFromStorage = localStorage.getItem('savedLocations');\n    if (savedLocationsFromStorage) {\n      setSavedLocations(JSON.parse(savedLocationsFromStorage));\n    }\n  }, []);\n\n  useEffect(() => {\n    // Save updated saved locations to local storage whenever it changes\n    localStorage.setItem('savedLocations', JSON.stringify(savedLocations));\n  }, [savedLocations]);\n\n  const fetchWeatherData = async () => {\n    if (!location.trim()) {\n      setError('Please enter a location.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5001/weather?location=${location}`);\n      console.log('5-Day Weather Forecast:', response.data.forecast.list); // Log the 5-day forecast data\n      setCurrentWeather(response.data.currentWeather);\n      setForecast(response.data.forecast);\n      setError('');\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const handleSaveLocation = () => {\n    // Save the current location to the list of saved locations\n    if (location.trim() && !savedLocations.includes(location.trim())) {\n      setSavedLocations([...savedLocations, location.trim()]);\n    }\n  };\n\n  const handleViewSavedLocation = async (savedLocation) => {\n    // Fetch weather data for the selected saved location\n    setLocation(savedLocation);\n    await fetchWeatherData();\n  };\n\n  const kelvinToCelsius = (kelvin) => {\n    return kelvin - 273.15;\n  };\n\n  const kelvinToFahrenheit = (kelvin) => {\n    return (kelvin * 9) / 5 - 459.67;\n  };\n\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit(prevUnit => prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius');\n  };\n\n  const aggregateDailyTemperatures = (list) => {\n    const dailyTemperatures = {};\n\n    // Loop through the forecast data\n    list.forEach((item) => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0]; // Extract date without time\n\n      // Check if the date key exists in the dailyTemperatures object\n      if (!dailyTemperatures[dateKey]) {\n        // If not, initialize an object for the date\n        dailyTemperatures[dateKey] = {\n          max: -Infinity, // Initialize max temperature to negative infinity\n          min: Infinity, // Initialize min temperature to positive infinity\n        };\n      }\n\n      // Update max temperature if current temperature is higher\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n\n      // Update min temperature if current temperature is lower\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n\n    return dailyTemperatures;\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h3\" gutterBottom align=\"center\">Weather App</Typography>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetchWeatherData();\n        }}\n        className={classes.form}\n      >\n        <TextField\n          label=\"Enter city or coordinates\"\n          variant=\"outlined\"\n          fullWidth\n          className={classes.textField}\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          className={classes.button}\n        >\n          Get Weather\n        </Button>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={handleSaveLocation}\n          className={classes.button}\n        >\n          Save Location\n        </Button>\n      </form>\n      {error && <Typography color=\"error\" align=\"center\" className={classes.weatherItem}>{error}</Typography>}\n      {loading && (\n        <div className={classes.loadingIndicator}>\n          <CircularProgress />\n        </div>\n      )}\n      {currentWeather && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">Current Weather</Typography>\n          <div className={classes.weatherItem}>\n            <Typography align=\"center\">Temperature: {temperatureUnit === 'Celsius' ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C' : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F'}</Typography>\n            <Typography align=\"center\">Description: {currentWeather.weather[0].description}</Typography>\n          </div>\n        </div>\n      )}\n      {forecast && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">5-Day Weather Forecast</Typography>\n          <Grid container spacing={3} justify=\"center\">\n            {Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => (\n              <Grid item key={date}>\n                <div className={classes.weatherItem}>\n                  <Typography align=\"center\" variant=\"h6\">{new Date(date).toLocaleDateString('en-US', { weekday: 'short' })}</Typography>\n                  <Typography align=\"center\">{date}</Typography>\n                  <Typography align=\"center\">Max: {temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F'}</Typography>\n                  <Typography align=\"center\">Min: {temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F'}</Typography>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n      <Typography variant=\"h5\" gutterBottom align=\"center\">Saved Locations</Typography>\n      <Grid container spacing={2} justify=\"center\">\n        {savedLocations.map((savedLocation, index) => (\n          <Grid item key={index}>\n            <Button variant=\"outlined\" onClick={() => handleViewSavedLocation(savedLocation)}>\n              {savedLocation}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        <Button variant=\"outlined\" color=\"primary\" onClick={toggleTemperatureUnit}>\n          Toggle Temperature Unit ({temperatureUnit})\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,UAAU,EAAEC,IAAI,EAAEC,gBAAgB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjH,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAK,KAAM;EACvC;AAAA,CACD,CAAC,CAAC;AAEH,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGJ,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,SAAS,CAAC;EACjE,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,MAAM8B,yBAAyB,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACxE,IAAIF,yBAAyB,EAAE;MAC7BD,iBAAiB,CAACI,IAAI,CAACC,KAAK,CAACJ,yBAAyB,CAAC,CAAC;IAC1D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,MAAM;IACd;IACA+B,YAAY,CAACI,OAAO,CAAC,gBAAgB,EAAEF,IAAI,CAACG,SAAS,CAACR,cAAc,CAAC,CAAC;EACxE,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI,CAACrB,QAAQ,CAACsB,IAAI,CAAC,CAAC,EAAE;MACpBjB,QAAQ,CAAC,0BAA0B,CAAC;MACpC;IACF;IAEA,IAAI;MACFI,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMc,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAE,0CAAyCxB,QAAS,EAAC,CAAC;MACtFyB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAACI,IAAI,CAACzB,QAAQ,CAAC0B,IAAI,CAAC,CAAC,CAAC;MACrErB,iBAAiB,CAACgB,QAAQ,CAACI,IAAI,CAACrB,cAAc,CAAC;MAC/CH,WAAW,CAACoB,QAAQ,CAACI,IAAI,CAACzB,QAAQ,CAAC;MACnCG,QAAQ,CAAC,EAAE,CAAC;MACZI,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdqB,OAAO,CAACrB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAAC,iDAAiD,CAAC;MAC3DI,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMoB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,IAAI7B,QAAQ,CAACsB,IAAI,CAAC,CAAC,IAAI,CAACV,cAAc,CAACkB,QAAQ,CAAC9B,QAAQ,CAACsB,IAAI,CAAC,CAAC,CAAC,EAAE;MAChET,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEZ,QAAQ,CAACsB,IAAI,CAAC,CAAC,CAAC,CAAC;IACzD;EACF,CAAC;EAED,MAAMS,uBAAuB,GAAG,MAAOC,aAAa,IAAK;IACvD;IACA/B,WAAW,CAAC+B,aAAa,CAAC;IAC1B,MAAMX,gBAAgB,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMY,eAAe,GAAIC,MAAM,IAAK;IAClC,OAAOA,MAAM,GAAG,MAAM;EACxB,CAAC;EAED,MAAMC,kBAAkB,GAAID,MAAM,IAAK;IACrC,OAAQA,MAAM,GAAG,CAAC,GAAI,CAAC,GAAG,MAAM;EAClC,CAAC;EAED,MAAME,qBAAqB,GAAGA,CAAA,KAAM;IAClCzB,kBAAkB,CAAC0B,QAAQ,IAAIA,QAAQ,KAAK,SAAS,GAAG,YAAY,GAAG,SAAS,CAAC;EACnF,CAAC;EAED,MAAMC,0BAA0B,GAAIV,IAAI,IAAK;IAC3C,MAAMW,iBAAiB,GAAG,CAAC,CAAC;;IAE5B;IACAX,IAAI,CAACY,OAAO,CAAEC,IAAI,IAAK;MACrB,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACG,EAAE,GAAG,IAAI,CAAC;MAC7C,MAAMC,OAAO,GAAGH,YAAY,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE1D;MACA,IAAI,CAACR,iBAAiB,CAACM,OAAO,CAAC,EAAE;QAC/B;QACAN,iBAAiB,CAACM,OAAO,CAAC,GAAG;UAC3BG,GAAG,EAAE,CAACC,QAAQ;UAAE;UAChBC,GAAG,EAAED,QAAQ,CAAE;QACjB,CAAC;MACH;;MAEA;MACA,IAAIR,IAAI,CAACU,IAAI,CAACC,QAAQ,GAAGb,iBAAiB,CAACM,OAAO,CAAC,CAACG,GAAG,EAAE;QACvDT,iBAAiB,CAACM,OAAO,CAAC,CAACG,GAAG,GAAGP,IAAI,CAACU,IAAI,CAACC,QAAQ;MACrD;;MAEA;MACA,IAAIX,IAAI,CAACU,IAAI,CAACE,QAAQ,GAAGd,iBAAiB,CAACM,OAAO,CAAC,CAACK,GAAG,EAAE;QACvDX,iBAAiB,CAACM,OAAO,CAAC,CAACK,GAAG,GAAGT,IAAI,CAACU,IAAI,CAACE,QAAQ;MACrD;IACF,CAAC,CAAC;IAEF,OAAOd,iBAAiB;EAC1B,CAAC;EAED,oBACE7C,OAAA,CAACR,SAAS;IAACoE,QAAQ,EAAC,IAAI;IAAAC,QAAA,gBACtB7D,OAAA,CAACL,UAAU;MAACmE,OAAO,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAAAH,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC7EpE,OAAA;MACEqE,QAAQ,EAAGC,CAAC,IAAK;QACfA,CAAC,CAACC,cAAc,CAAC,CAAC;QAClB5C,gBAAgB,CAAC,CAAC;MACpB,CAAE;MACF6C,SAAS,EAAEnE,OAAO,CAACoE,IAAK;MAAAZ,QAAA,gBAExB7D,OAAA,CAACP,SAAS;QACRiF,KAAK,EAAC,2BAA2B;QACjCZ,OAAO,EAAC,UAAU;QAClBa,SAAS;QACTH,SAAS,EAAEnE,OAAO,CAACuE,SAAU;QAC7BC,KAAK,EAAEvE,QAAS;QAChBwE,QAAQ,EAAGR,CAAC,IAAK/D,WAAW,CAAC+D,CAAC,CAACS,MAAM,CAACF,KAAK;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFpE,OAAA,CAACN,MAAM;QACLoE,OAAO,EAAC,WAAW;QACnBkB,KAAK,EAAC,SAAS;QACfC,IAAI,EAAC,QAAQ;QACbT,SAAS,EAAEnE,OAAO,CAAC6E,MAAO;QAAArB,QAAA,EAC3B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTpE,OAAA,CAACN,MAAM;QACLoE,OAAO,EAAC,UAAU;QAClBkB,KAAK,EAAC,SAAS;QACfG,OAAO,EAAEhD,kBAAmB;QAC5BqC,SAAS,EAAEnE,OAAO,CAAC6E,MAAO;QAAArB,QAAA,EAC3B;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACN1D,KAAK,iBAAIV,OAAA,CAACL,UAAU;MAACqF,KAAK,EAAC,OAAO;MAAChB,KAAK,EAAC,QAAQ;MAACQ,SAAS,EAAEnE,OAAO,CAAC+E,WAAY;MAAAvB,QAAA,EAAEnD;IAAK;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,EACtGtD,OAAO,iBACNd,OAAA;MAAKwE,SAAS,EAAEnE,OAAO,CAACgF,gBAAiB;MAAAxB,QAAA,eACvC7D,OAAA,CAACF,gBAAgB;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CACN,EACAxD,cAAc,iBACbZ,OAAA;MAAKwE,SAAS,EAAEnE,OAAO,CAACiF,gBAAiB;MAAAzB,QAAA,gBACvC7D,OAAA,CAACL,UAAU;QAACmE,OAAO,EAAC,IAAI;QAACC,YAAY;QAACC,KAAK,EAAC,QAAQ;QAAAH,QAAA,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACjFpE,OAAA;QAAKwE,SAAS,EAAEnE,OAAO,CAAC+E,WAAY;QAAAvB,QAAA,gBAClC7D,OAAA,CAACL,UAAU;UAACqE,KAAK,EAAC,QAAQ;UAAAH,QAAA,GAAC,eAAa,EAAC7C,eAAe,KAAK,SAAS,GAAGuB,eAAe,CAAC3B,cAAc,CAAC6C,IAAI,CAAC8B,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG/C,kBAAkB,CAAC7B,cAAc,CAAC6C,IAAI,CAAC8B,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;QAAA;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACnNpE,OAAA,CAACL,UAAU;UAACqE,KAAK,EAAC,QAAQ;UAAAH,QAAA,GAAC,eAAa,EAACjD,cAAc,CAAC6E,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW;QAAA;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EACA5D,QAAQ,iBACPR,OAAA;MAAKwE,SAAS,EAAEnE,OAAO,CAACiF,gBAAiB;MAAAzB,QAAA,gBACvC7D,OAAA,CAACL,UAAU;QAACmE,OAAO,EAAC,IAAI;QAACC,YAAY;QAACC,KAAK,EAAC,QAAQ;QAAAH,QAAA,EAAC;MAAsB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACxFpE,OAAA,CAACH,IAAI;QAAC8F,SAAS;QAACC,OAAO,EAAE,CAAE;QAACC,OAAO,EAAC,QAAQ;QAAAhC,QAAA,EACzCiC,MAAM,CAACC,OAAO,CAACnD,0BAA0B,CAACpC,QAAQ,CAAC0B,IAAI,CAAC,CAAC,CAAC8D,GAAG,CAAC,CAAC,CAACC,IAAI,EAAEC,YAAY,CAAC,kBAClFlG,OAAA,CAACH,IAAI;UAACkD,IAAI;UAAAc,QAAA,eACR7D,OAAA;YAAKwE,SAAS,EAAEnE,OAAO,CAAC+E,WAAY;YAAAvB,QAAA,gBAClC7D,OAAA,CAACL,UAAU;cAACqE,KAAK,EAAC,QAAQ;cAACF,OAAO,EAAC,IAAI;cAAAD,QAAA,EAAE,IAAIZ,IAAI,CAACgD,IAAI,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;gBAAEC,OAAO,EAAE;cAAQ,CAAC;YAAC;cAAAnC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACvHpE,OAAA,CAACL,UAAU;cAACqE,KAAK,EAAC,QAAQ;cAAAH,QAAA,EAAEoC;YAAI;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eAC9CpE,OAAA,CAACL,UAAU;cAACqE,KAAK,EAAC,QAAQ;cAAAH,QAAA,GAAC,OAAK,EAAC7C,eAAe,KAAK,SAAS,GAAGuB,eAAe,CAAC2D,YAAY,CAAC5C,GAAG,CAAC,CAACkC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG/C,kBAAkB,CAACyD,YAAY,CAAC5C,GAAG,CAAC,CAACkC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;YAAA;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eAC3LpE,OAAA,CAACL,UAAU;cAACqE,KAAK,EAAC,QAAQ;cAAAH,QAAA,GAAC,OAAK,EAAC7C,eAAe,KAAK,SAAS,GAAGuB,eAAe,CAAC2D,YAAY,CAAC1C,GAAG,CAAC,CAACgC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG/C,kBAAkB,CAACyD,YAAY,CAAC1C,GAAG,CAAC,CAACgC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI;YAAA;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxL;QAAC,GANQ6B,IAAI;UAAAhC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOd,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,eACDpE,OAAA,CAACL,UAAU;MAACmE,OAAO,EAAC,IAAI;MAACC,YAAY;MAACC,KAAK,EAAC,QAAQ;MAAAH,QAAA,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACjFpE,OAAA,CAACH,IAAI;MAAC8F,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,OAAO,EAAC,QAAQ;MAAAhC,QAAA,EACzC3C,cAAc,CAAC8E,GAAG,CAAC,CAAC1D,aAAa,EAAE+D,KAAK,kBACvCrG,OAAA,CAACH,IAAI;QAACkD,IAAI;QAAAc,QAAA,eACR7D,OAAA,CAACN,MAAM;UAACoE,OAAO,EAAC,UAAU;UAACqB,OAAO,EAAEA,CAAA,KAAM9C,uBAAuB,CAACC,aAAa,CAAE;UAAAuB,QAAA,EAC9EvB;QAAa;UAAA2B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAHKiC,KAAK;QAAApC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACPpE,OAAA;MAAKsG,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAA3C,QAAA,eACrD7D,OAAA,CAACN,MAAM;QAACoE,OAAO,EAAC,UAAU;QAACkB,KAAK,EAAC,SAAS;QAACG,OAAO,EAAEzC,qBAAsB;QAAAmB,QAAA,GAAC,2BAChD,EAAC7C,eAAe,EAAC,GAC5C;MAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAChE,EAAA,CAxLID,UAAU;EAAA,QACEF,SAAS;AAAA;AAAAwG,EAAA,GADrBtG,UAAU;AA0LhB,eAAeA,UAAU;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}