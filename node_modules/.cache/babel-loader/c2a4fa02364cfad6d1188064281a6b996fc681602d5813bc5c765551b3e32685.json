{"ast":null,"code":"var _jsxFileName = \"/Users/adarshkumar/weather-app/src/components/WeatherComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1\n  },\n  button: {\n    marginLeft: theme.spacing(2)\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4)\n  },\n  weatherItem: {\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1)\n  },\n  loadingIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4)\n  }\n}));\nconst WeatherApp = () => {\n  _s();\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius'); // Default to Celsius\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem('weatherAppFavorites')) || [];\n    setFavorites(savedFavorites);\n  }, []);\n  const saveFavorite = () => {\n    if (favorites.includes(location)) {\n      setError('Location already in favorites.');\n      return;\n    }\n    setFavorites([...favorites, location]);\n    localStorage.setItem('weatherAppFavorites', JSON.stringify([...favorites, location]));\n    setLocation('');\n    setError('');\n  };\n  const fetchWeatherData = async () => {\n    if (!location.trim()) {\n      setError('Please enter a location.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5001/weather?location=${location}`);\n      setCurrentWeather(response.data.currentWeather);\n      setForecast(response.data.forecast);\n      setError('');\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n      setLoading(false);\n    }\n  };\n  const kelvinToCelsius = kelvin => {\n    return kelvin - 273.15;\n  };\n  const kelvinToFahrenheit = kelvin => {\n    return kelvin * 9 / 5 - 459.67;\n  };\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit(prevUnit => prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius');\n  };\n  const aggregateDailyTemperatures = list => {\n    const dailyTemperatures = {};\n    list.forEach(item => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0];\n      if (!dailyTemperatures[dateKey]) {\n        dailyTemperatures[dateKey] = {\n          max: -Infinity,\n          min: Infinity\n        };\n      }\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n    return dailyTemperatures;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        fetchWeatherData();\n      },\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter city or coordinates\",\n        variant: \"outlined\",\n        fullWidth: true,\n        className: classes.textField,\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: classes.button,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: saveFavorite,\n        disabled: !location.trim(),\n        className: classes.button,\n        children: \"Add to Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      className: classes.weatherItem,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loadingIndicator,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.weatherItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Temperature:\", ' ', temperatureUnit === 'Celsius' ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C' : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Description: \", currentWeather.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"5-Day Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        justify: \"center\",\n        children: Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.weatherItem,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"h6\",\n              children: new Date(date).toLocaleDateString('en-US', {\n                weekday: 'short'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: [\"Max:\", ' ', temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: [\"Min:\", ' ', temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this)\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: toggleTemperatureUnit,\n        children: [\"Toggle Temperature Unit (\", temperatureUnit, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), favorites.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Favorite Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: favorites.map((fav, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: fav\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"Zd0Giy0ELWCxXCMl5bbIeMXVllY=\", false, function () {\n  return [useStyles];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","TextField","Button","Typography","makeStyles","Grid","CircularProgress","jsxDEV","_jsxDEV","useStyles","theme","form","marginTop","spacing","marginBottom","display","alignItems","textField","marginRight","flex","button","marginLeft","weatherContainer","weatherItem","padding","border","borderRadius","loadingIndicator","justifyContent","WeatherApp","_s","classes","location","setLocation","forecast","setForecast","error","setError","currentWeather","setCurrentWeather","loading","setLoading","temperatureUnit","setTemperatureUnit","favorites","setFavorites","savedFavorites","JSON","parse","localStorage","getItem","saveFavorite","includes","setItem","stringify","fetchWeatherData","trim","response","get","data","console","kelvinToCelsius","kelvin","kelvinToFahrenheit","toggleTemperatureUnit","prevUnit","aggregateDailyTemperatures","list","dailyTemperatures","forEach","item","forecastDate","Date","dt","dateKey","toISOString","split","max","Infinity","min","main","temp_max","temp_min","maxWidth","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","className","label","fullWidth","value","onChange","target","color","type","onClick","disabled","temp","toFixed","weather","description","container","justify","Object","entries","map","date","temperatures","toLocaleDateString","weekday","style","textAlign","length","fav","index","_c","$RefreshReg$"],"sources":["/Users/adarshkumar/weather-app/src/components/WeatherComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4),\n  },\n  weatherItem: {\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1),\n  },\n  loadingIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4),\n  },\n}));\n\nconst WeatherApp = () => {\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius'); // Default to Celsius\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem('weatherAppFavorites')) || [];\n    setFavorites(savedFavorites);\n  }, []);\n\n  const saveFavorite = () => {\n    if (favorites.includes(location)) {\n      setError('Location already in favorites.');\n      return;\n    }\n    setFavorites([...favorites, location]);\n    localStorage.setItem('weatherAppFavorites', JSON.stringify([...favorites, location]));\n    setLocation('');\n    setError('');\n  };\n\n  const fetchWeatherData = async () => {\n    if (!location.trim()) {\n      setError('Please enter a location.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5001/weather?location=${location}`);\n      setCurrentWeather(response.data.currentWeather);\n      setForecast(response.data.forecast);\n      setError('');\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const kelvinToCelsius = (kelvin) => {\n    return kelvin - 273.15;\n  };\n\n  const kelvinToFahrenheit = (kelvin) => {\n    return (kelvin * 9) / 5 - 459.67;\n  };\n\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit((prevUnit) => (prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius'));\n  };\n\n  const aggregateDailyTemperatures = (list) => {\n    const dailyTemperatures = {};\n\n    list.forEach((item) => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0];\n\n      if (!dailyTemperatures[dateKey]) {\n        dailyTemperatures[dateKey] = {\n          max: -Infinity,\n          min: Infinity,\n        };\n      }\n\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n\n    return dailyTemperatures;\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h3\" gutterBottom align=\"center\">\n        Weather App\n      </Typography>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetchWeatherData();\n        }}\n        className={classes.form}\n      >\n        <TextField\n          label=\"Enter city or coordinates\"\n          variant=\"outlined\"\n          fullWidth\n          className={classes.textField}\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>\n          Get Weather\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={saveFavorite}\n          disabled={!location.trim()}\n          className={classes.button}\n        >\n          Add to Favorites\n        </Button>\n      </form>\n      {error && (\n        <Typography color=\"error\" align=\"center\" className={classes.weatherItem}>\n          {error}\n        </Typography>\n      )}\n      {loading && (\n        <div className={classes.loadingIndicator}>\n          <CircularProgress />\n        </div>\n      )}\n      {currentWeather && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Current Weather\n          </Typography>\n          <div className={classes.weatherItem}>\n            <Typography align=\"center\">\n              Temperature:{' '}\n              {temperatureUnit === 'Celsius'\n                ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C'\n                : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F'}\n            </Typography>\n            <Typography align=\"center\">Description: {currentWeather.weather[0].description}</Typography>\n          </div>\n        </div>\n      )}\n      {forecast && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            5-Day Weather Forecast\n          </Typography>\n          <Grid container spacing={3} justify=\"center\">\n            {Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => (\n              <Grid item key={date}>\n                <div className={classes.weatherItem}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    {new Date(date).toLocaleDateString('en-US', { weekday: 'short' })}\n                  </Typography>\n                  <Typography align=\"center\">{date}</Typography>\n                  <Typography align=\"center\">\n                    Max:{' '}\n                    {temperatureUnit === 'Celsius'\n                      ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C'\n                      : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F'}\n                  </Typography>\n                  <Typography align=\"center\">\n                    Min:{' '}\n                    {temperatureUnit === 'Celsius'\n                      ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C'\n                      : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F'}\n                  </Typography>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        <Button variant=\"outlined\" color=\"primary\" onClick={toggleTemperatureUnit}>\n          Toggle Temperature Unit ({temperatureUnit})\n        </Button>\n      </div>\n      {favorites.length > 0 && (\n        <div>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Favorite Locations\n          </Typography>\n          <ul>\n            {favorites.map((fav, index) => (\n              <li key={index}>{fav}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}