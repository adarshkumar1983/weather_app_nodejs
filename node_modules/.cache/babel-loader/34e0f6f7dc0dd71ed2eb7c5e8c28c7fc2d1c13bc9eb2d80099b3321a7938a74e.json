{"ast":null,"code":"var _jsxFileName = \"/Users/adarshkumar/weather-app/src/components/WeatherComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress, Paper } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(4),\n    backgroundColor: '#f0f0f0',\n    borderRadius: theme.spacing(2)\n  },\n  form: {\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1\n  },\n  button: {\n    marginLeft: theme.spacing(2)\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    backgroundColor: '#fff',\n    padding: theme.spacing(3),\n    borderRadius: theme.spacing(2),\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\n  },\n  weatherItem: {\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1),\n    backgroundColor: '#f9f9f9',\n    marginBottom: theme.spacing(2)\n  },\n  loadingIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4)\n  },\n  savedLocationsContainer: {\n    marginTop: theme.spacing(2),\n    backgroundColor: '#fff',\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(2),\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)'\n  },\n  savedLocationButton: {\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    backgroundColor: '#3f51b5',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: '#303f9f'\n    }\n  }\n}));\nconst WeatherApp = () => {\n  _s();\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius');\n  const [savedLocations, setSavedLocations] = useState([]);\n  useEffect(() => {\n    // Load saved locations from local storage when component mounts\n    const savedLocationsFromStorage = localStorage.getItem('savedLocations');\n    if (savedLocationsFromStorage) {\n      setSavedLocations(JSON.parse(savedLocationsFromStorage));\n    }\n\n    // Fetch weather data for user's current location\n    fetchWeatherForCurrentLocation();\n  }, []);\n  useEffect(() => {\n    // Save updated saved locations to local storage whenever it changes\n    localStorage.setItem('savedLocations', JSON.stringify(savedLocations));\n  }, [savedLocations]);\n  const fetchWeatherForCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        console.log('Latitude:', latitude);\n        console.log('Longitude:', longitude);\n        try {\n          setLoading(true);\n          const response = await axios.get(`http://localhost:5001/weather?lat=${latitude}&lon=${longitude}`);\n          console.log('Weather API Response:', response.data);\n          setCurrentWeather(response.data.currentWeather);\n          setForecast(response.data.forecast);\n          setError('');\n          setLoading(false);\n        } catch (error) {\n          console.error('Error fetching weather data:', error);\n          setError('Failed to fetch weather data for your current location. Please try again.');\n          setLoading(false);\n        }\n      }, error => {\n        console.error('Error getting user location:', error);\n        setError('Failed to get your current location. Please enter a location manually.');\n      });\n    } else {\n      setError('Geolocation is not supported by your browser. Please enter a location manually.');\n    }\n  };\n  const fetchWeatherData = async () => {\n    if (!location.trim()) {\n      setError('Please enter a location.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5001/weather?location=${location}`);\n      setCurrentWeather(response.data.currentWeather);\n      setForecast(response.data.forecast);\n      setError('');\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n      setLoading(false);\n    }\n  };\n  const handleSaveLocation = () => {\n    // Save the current location to the list of saved locations\n    if (location.trim() && !savedLocations.includes(location.trim())) {\n      setSavedLocations([...savedLocations, location.trim()]);\n    }\n  };\n  const handleViewSavedLocation = async savedLocation => {\n    // Fetch weather data for the selected saved location\n    setLocation(savedLocation);\n    await fetchWeatherData();\n  };\n  const kelvinToCelsius = kelvin => {\n    return kelvin - 273.15;\n  };\n  const kelvinToFahrenheit = kelvin => {\n    return kelvin * 9 / 5 - 459.67;\n  };\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit(prevUnit => prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius');\n  };\n  const aggregateDailyTemperatures = list => {\n    const dailyTemperatures = {};\n\n    // Loop through the forecast data\n    list.forEach(item => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0]; // Extract date without time\n\n      // Check if the date key exists in the dailyTemperatures object\n      if (!dailyTemperatures[dateKey]) {\n        // If not, initialize an object for the date\n        dailyTemperatures[dateKey] = {\n          max: -Infinity,\n          // Initialize max temperature to negative infinity\n          min: Infinity // Initialize min temperature to positive infinity\n        };\n      }\n\n      // Update max temperature if current temperature is higher\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n\n      // Update min temperature if current temperature is lower\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n    return dailyTemperatures;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          fetchWeatherData();\n        },\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Enter city or coordinates\",\n          variant: \"outlined\",\n          fullWidth: true,\n          className: classes.textField,\n          value: location,\n          onChange: e => setLocation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          className: classes.button,\n          children: \"Get Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: handleSaveLocation,\n          className: classes.button,\n          children: \"Save Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        align: \"center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loadingIndicator,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.weatherItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"h5\",\n          children: \"Current Weather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Temperature: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C' : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Description: \", currentWeather.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.weatherItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"h5\",\n          children: \"5-Day Weather Forecast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          justify: \"center\",\n          children: Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.weatherItem,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                align: \"center\",\n                variant: \"h6\",\n                children: new Date(date).toLocaleDateString('en-US', {\n                  weekday: 'short'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"center\",\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"center\",\n                children: [\"Max: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                align: \"center\",\n                children: [\"Min: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)\n          }, date, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.savedLocationsContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Saved Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"center\",\n        children: savedLocations.map((savedLocation, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => handleViewSavedLocation(savedLocation),\n            className: classes.savedLocationButton,\n            children: savedLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: toggleTemperatureUnit,\n        children: [\"Toggle Temperature Unit (\", temperatureUnit, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"dmleZMgPsK2R6HhA0jRe4yFPHsk=\", false, function () {\n  return [useStyles];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","TextField","Button","Typography","makeStyles","Grid","CircularProgress","Paper","jsxDEV","_jsxDEV","useStyles","theme","root","marginTop","spacing","marginBottom","padding","backgroundColor","borderRadius","form","display","alignItems","textField","marginRight","flex","button","marginLeft","weatherContainer","boxShadow","weatherItem","border","loadingIndicator","justifyContent","savedLocationsContainer","savedLocationButton","color","WeatherApp","_s","classes","location","setLocation","forecast","setForecast","error","setError","currentWeather","setCurrentWeather","loading","setLoading","temperatureUnit","setTemperatureUnit","savedLocations","setSavedLocations","savedLocationsFromStorage","localStorage","getItem","JSON","parse","fetchWeatherForCurrentLocation","setItem","stringify","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","log","response","get","data","fetchWeatherData","trim","handleSaveLocation","includes","handleViewSavedLocation","savedLocation","kelvinToCelsius","kelvin","kelvinToFahrenheit","toggleTemperatureUnit","prevUnit","aggregateDailyTemperatures","list","dailyTemperatures","forEach","item","forecastDate","Date","dt","dateKey","toISOString","split","max","Infinity","min","main","temp_max","temp_min","maxWidth","className","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","elevation","onSubmit","e","preventDefault","label","fullWidth","value","onChange","target","type","onClick","temp","toFixed","weather","description","container","justify","Object","entries","map","date","temperatures","toLocaleDateString","weekday","index","style","textAlign","_c","$RefreshReg$"],"sources":["/Users/adarshkumar/weather-app/src/components/WeatherComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress ,Paper} from '@material-ui/core';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    padding: theme.spacing(4),\n    backgroundColor: '#f0f0f0',\n    borderRadius: theme.spacing(2),\n  },\n  form: {\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4),\n    backgroundColor: '#fff',\n    padding: theme.spacing(3),\n    borderRadius: theme.spacing(2),\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n  },\n  weatherItem: {\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1),\n    backgroundColor: '#f9f9f9',\n    marginBottom: theme.spacing(2),\n  },\n  loadingIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4),\n  },\n  savedLocationsContainer: {\n    marginTop: theme.spacing(2),\n    backgroundColor: '#fff',\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(2),\n    boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n  },\n  savedLocationButton: {\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    backgroundColor: '#3f51b5',\n    color: '#fff',\n    '&:hover': {\n      backgroundColor: '#303f9f',\n    },\n  },\n}));\nconst WeatherApp = () => {\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius');\n  const [savedLocations, setSavedLocations] = useState([]);\n\n  useEffect(() => {\n    // Load saved locations from local storage when component mounts\n    const savedLocationsFromStorage = localStorage.getItem('savedLocations');\n    if (savedLocationsFromStorage) {\n      setSavedLocations(JSON.parse(savedLocationsFromStorage));\n    }\n\n    // Fetch weather data for user's current location\n    fetchWeatherForCurrentLocation();\n  }, []);\n\n  useEffect(() => {\n    // Save updated saved locations to local storage whenever it changes\n    localStorage.setItem('savedLocations', JSON.stringify(savedLocations));\n  }, [savedLocations]);\n\n  const fetchWeatherForCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        const { latitude, longitude } = position.coords;\n        console.log('Latitude:', latitude);\n        console.log('Longitude:', longitude);\n        try {\n          setLoading(true);\n          const response = await axios.get(`http://localhost:5001/weather?lat=${latitude}&lon=${longitude}`);\n          console.log('Weather API Response:', response.data);\n          setCurrentWeather(response.data.currentWeather);\n          setForecast(response.data.forecast);\n          setError('');\n          setLoading(false);\n        } catch (error) {\n          console.error('Error fetching weather data:', error);\n          setError('Failed to fetch weather data for your current location. Please try again.');\n          setLoading(false);\n        }\n      }, (error) => {\n        console.error('Error getting user location:', error);\n        setError('Failed to get your current location. Please enter a location manually.');\n      });\n    } else {\n      setError('Geolocation is not supported by your browser. Please enter a location manually.');\n    }\n  };\n  \n  const fetchWeatherData = async () => {\n    if (!location.trim()) {\n      setError('Please enter a location.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await axios.get(`http://localhost:5001/weather?location=${location}`);\n      setCurrentWeather(response.data.currentWeather);\n      setForecast(response.data.forecast);\n      setError('');\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n      setLoading(false);\n    }\n  }\n\n  const handleSaveLocation = () => {\n    // Save the current location to the list of saved locations\n    if (location.trim() && !savedLocations.includes(location.trim())) {\n      setSavedLocations([...savedLocations, location.trim()]);\n    }\n  };\n\n  const handleViewSavedLocation = async (savedLocation) => {\n    // Fetch weather data for the selected saved location\n    setLocation(savedLocation);\n    await fetchWeatherData();\n  };\n\n  const kelvinToCelsius = (kelvin) => {\n    return kelvin - 273.15;\n  };\n\n  const kelvinToFahrenheit = (kelvin) => {\n    return (kelvin * 9) / 5 - 459.67;\n  };\n\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit(prevUnit => prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius');\n  };\n\n  const aggregateDailyTemperatures = (list) => {\n    const dailyTemperatures = {};\n\n    // Loop through the forecast data\n    list.forEach((item) => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0]; // Extract date without time\n\n      // Check if the date key exists in the dailyTemperatures object\n      if (!dailyTemperatures[dateKey]) {\n        // If not, initialize an object for the date\n        dailyTemperatures[dateKey] = {\n          max: -Infinity, // Initialize max temperature to negative infinity\n          min: Infinity, // Initialize min temperature to positive infinity\n        };\n      }\n\n      // Update max temperature if current temperature is higher\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n\n      // Update min temperature if current temperature is lower\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n\n    return dailyTemperatures;\n  };\n\n  return (\n    <Container maxWidth=\"md\" className={classes.root}>\n      <Typography variant=\"h3\" gutterBottom align=\"center\">Weather App</Typography>\n      <Paper elevation={3} className={classes.weatherContainer}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            fetchWeatherData();\n          }}\n          className={classes.form}\n        >\n          <TextField\n            label=\"Enter city or coordinates\"\n            variant=\"outlined\"\n            fullWidth\n            className={classes.textField}\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            className={classes.button}\n          >\n            Get Weather\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleSaveLocation}\n            className={classes.button}\n          >\n            Save Location\n          </Button>\n        </form>\n        {error && <Typography color=\"error\" align=\"center\">{error}</Typography>}\n        {loading && (\n          <div className={classes.loadingIndicator}>\n            <CircularProgress />\n          </div>\n        )}\n        {currentWeather && (\n          <div className={classes.weatherItem}>\n            <Typography align=\"center\" variant=\"h5\">Current Weather</Typography>\n            <Typography align=\"center\">Temperature: {temperatureUnit === 'Celsius' ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C' : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F'}</Typography>\n            <Typography align=\"center\">Description: {currentWeather.weather[0].description}</Typography>\n          </div>\n        )}\n        {forecast && (\n          <div className={classes.weatherItem}>\n            <Typography align=\"center\" variant=\"h5\">5-Day Weather Forecast</Typography>\n            <Grid container spacing={3} justify=\"center\">\n              {Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => (\n                <Grid item key={date}>\n                  <div className={classes.weatherItem}>\n                    <Typography align=\"center\" variant=\"h6\">{new Date(date).toLocaleDateString('en-US', { weekday: 'short' })}</Typography>\n                    <Typography align=\"center\">{date}</Typography>\n                    <Typography align=\"center\">Max: {temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F'}</Typography>\n                    <Typography align=\"center\">Min: {temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F'}</Typography>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n          </div>\n        )}\n      </Paper>\n      <div className={classes.savedLocationsContainer}>\n        <Typography variant=\"h5\" gutterBottom align=\"center\">Saved Locations</Typography>\n        <Grid container spacing={2} justify=\"center\">\n          {savedLocations.map((savedLocation, index) => (\n            <Grid item key={index}>\n              <Button\n                variant=\"outlined\"\n                onClick={() => handleViewSavedLocation(savedLocation)}\n                className={classes.savedLocationButton}\n              >\n                {savedLocation}\n              </Button>\n            </Grid>\n          ))}\n        </Grid>\n      </div>\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        <Button variant=\"outlined\" color=\"primary\" onClick={toggleTemperatureUnit}>\n          Toggle Temperature Unit ({temperatureUnit})\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default WeatherApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}