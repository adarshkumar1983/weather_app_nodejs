{"ast":null,"code":"var _jsxFileName = \"/Users/adarshkumar/weather-app/src/components/WeatherComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1\n  },\n  button: {\n    marginLeft: theme.spacing(2)\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4)\n  },\n  weatherItem: {\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1)\n  },\n  loadingIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4)\n  }\n}));\nconst WeatherApp = () => {\n  _s();\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius'); // Default to Celsius\n  const [favorites, setFavorites] = useState([]);\n  useEffect(() => {\n    fetchWeatherData(); // Fetch weather data for the user's current location when the component mounts\n  }, []); // Empty dependency array to run this effect only once\n\n  const fetchWeatherData = async (latitude, longitude) => {\n    try {\n      setLoading(true);\n      let url;\n      if (latitude && longitude) {\n        url = `http://localhost:5001/weather?lat=${latitude}&lon=${longitude}`;\n      } else {\n        url = `http://localhost:5001/weather?location=${location}`;\n      }\n      const response = await axios.get(url);\n      setCurrentWeather(response.data.currentWeather);\n      setForecast(response.data.forecast);\n      setError('');\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n      setLoading(false);\n    }\n  };\n  const handleFetchCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        fetchWeatherData(latitude, longitude);\n      }, error => {\n        console.error('Error getting current location:', error);\n        setError('Failed to get current location. Please try again.');\n      });\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  };\n  const kelvinToCelsius = kelvin => {\n    return kelvin - 273.15;\n  };\n  const kelvinToFahrenheit = kelvin => {\n    return kelvin * 9 / 5 - 459.67;\n  };\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit(prevUnit => prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius');\n  };\n  const aggregateDailyTemperatures = list => {\n    const dailyTemperatures = {};\n    list.forEach(item => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0];\n      if (!dailyTemperatures[dateKey]) {\n        dailyTemperatures[dateKey] = {\n          max: -Infinity,\n          min: Infinity\n        };\n      }\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n    return dailyTemperatures;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        fetchWeatherData();\n      },\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter city or coordinates\",\n        variant: \"outlined\",\n        fullWidth: true,\n        className: classes.textField,\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: classes.button,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: saveFavorite,\n        disabled: !location.trim(),\n        className: classes.button,\n        children: \"Add to Favorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      className: classes.weatherItem,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loadingIndicator,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.weatherItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Temperature:\", ' ', temperatureUnit === 'Celsius' ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C' : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Description: \", currentWeather.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"5-Day Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        justify: \"center\",\n        children: Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.weatherItem,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"h6\",\n              children: new Date(date).toLocaleDateString('en-US', {\n                weekday: 'short'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: [\"Max:\", ' ', temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: [\"Min:\", ' ', temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: toggleTemperatureUnit,\n        children: [\"Toggle Temperature Unit (\", temperatureUnit, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), favorites.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Favorite Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: favorites.map((fav, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: fav\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"Zd0Giy0ELWCxXCMl5bbIeMXVllY=\", false, function () {\n  return [useStyles];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","TextField","Button","Typography","makeStyles","Grid","CircularProgress","jsxDEV","_jsxDEV","useStyles","theme","form","marginTop","spacing","marginBottom","display","alignItems","textField","marginRight","flex","button","marginLeft","weatherContainer","weatherItem","padding","border","borderRadius","loadingIndicator","justifyContent","WeatherApp","_s","classes","location","setLocation","forecast","setForecast","error","setError","currentWeather","setCurrentWeather","loading","setLoading","temperatureUnit","setTemperatureUnit","favorites","setFavorites","fetchWeatherData","latitude","longitude","url","response","get","data","console","handleFetchCurrentLocation","navigator","geolocation","getCurrentPosition","position","coords","kelvinToCelsius","kelvin","kelvinToFahrenheit","toggleTemperatureUnit","prevUnit","aggregateDailyTemperatures","list","dailyTemperatures","forEach","item","forecastDate","Date","dt","dateKey","toISOString","split","max","Infinity","min","main","temp_max","temp_min","maxWidth","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","className","label","fullWidth","value","onChange","target","color","type","onClick","saveFavorite","disabled","trim","temp","toFixed","weather","description","container","justify","Object","entries","map","date","temperatures","toLocaleDateString","weekday","style","textAlign","length","fav","index","_c","$RefreshReg$"],"sources":["/Users/adarshkumar/weather-app/src/components/WeatherComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4),\n  },\n  weatherItem: {\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1),\n  },\n  loadingIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4),\n  },\n}));\n\nconst WeatherApp = () => {\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius'); // Default to Celsius\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    fetchWeatherData(); // Fetch weather data for the user's current location when the component mounts\n  }, []); // Empty dependency array to run this effect only once\n\n  const fetchWeatherData = async (latitude, longitude) => {\n    try {\n      setLoading(true);\n      let url;\n      if (latitude && longitude) {\n        url = `http://localhost:5001/weather?lat=${latitude}&lon=${longitude}`;\n      } else {\n        url = `http://localhost:5001/weather?location=${location}`;\n      }\n      const response = await axios.get(url);\n      setCurrentWeather(response.data.currentWeather);\n      setForecast(response.data.forecast);\n      setError('');\n      setLoading(false);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      setError('Failed to fetch weather data. Please try again.');\n      setLoading(false);\n    }\n  };\n\n  const handleFetchCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          fetchWeatherData(latitude, longitude);\n        },\n        (error) => {\n          console.error('Error getting current location:', error);\n          setError('Failed to get current location. Please try again.');\n        }\n      );\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  };\n\n  const kelvinToCelsius = (kelvin) => {\n    return kelvin - 273.15;\n  };\n\n  const kelvinToFahrenheit = (kelvin) => {\n    return (kelvin * 9) / 5 - 459.67;\n  };\n\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit((prevUnit) => (prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius'));\n  };\n\n  const aggregateDailyTemperatures = (list) => {\n    const dailyTemperatures = {};\n\n    list.forEach((item) => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0];\n\n      if (!dailyTemperatures[dateKey]) {\n        dailyTemperatures[dateKey] = {\n          max: -Infinity,\n          min: Infinity,\n        };\n      }\n\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n\n    return dailyTemperatures;\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h3\" gutterBottom align=\"center\">\n        Weather App\n      </Typography>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetchWeatherData();\n        }}\n        className={classes.form}\n      >\n        <TextField\n          label=\"Enter city or coordinates\"\n          variant=\"outlined\"\n          fullWidth\n          className={classes.textField}\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>\n          Get Weather\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={saveFavorite}\n          disabled={!location.trim()}\n          className={classes.button}\n        >\n          Add to Favorites\n        </Button>\n      </form>\n      {error && (\n        <Typography color=\"error\" align=\"center\" className={classes.weatherItem}>\n          {error}\n        </Typography>\n      )}\n      {loading && (\n        <div className={classes.loadingIndicator}>\n          <CircularProgress />\n        </div>\n      )}\n      {currentWeather && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Current Weather\n          </Typography>\n          <div className={classes.weatherItem}>\n            <Typography align=\"center\">\n              Temperature:{' '}\n              {temperatureUnit === 'Celsius'\n                ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C'\n                : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F'}\n            </Typography>\n            <Typography align=\"center\">Description: {currentWeather.weather[0].description}</Typography>\n          </div>\n        </div>\n      )}\n      {forecast && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            5-Day Weather Forecast\n          </Typography>\n          <Grid container spacing={3} justify=\"center\">\n            {Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => (\n              <Grid item key={date}>\n                <div className={classes.weatherItem}>\n                  <Typography align=\"center\" variant=\"h6\">\n                    {new Date(date).toLocaleDateString('en-US', { weekday: 'short' })}\n                  </Typography>\n                  <Typography align=\"center\">{date}</Typography>\n                  <Typography align=\"center\">\n                    Max:{' '}\n                    {temperatureUnit === 'Celsius'\n                      ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C'\n                      : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F'}\n                  </Typography>\n                  <Typography align=\"center\">\n                    Min:{' '}\n                    {temperatureUnit === 'Celsius'\n                      ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C'\n                      : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F'}\n                  </Typography>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        <Button variant=\"outlined\" color=\"primary\" onClick={toggleTemperatureUnit}>\n          Toggle Temperature Unit ({temperatureUnit})\n        </Button>\n      </div>\n      {favorites.length > 0 && (\n        <div>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            Favorite Locations\n          </Typography>\n          <ul>\n            {favorites.map((fav, index) => (\n              <li key={index}>{fav}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}