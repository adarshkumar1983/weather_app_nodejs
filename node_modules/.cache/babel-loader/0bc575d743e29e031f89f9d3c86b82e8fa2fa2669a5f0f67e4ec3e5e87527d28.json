{"ast":null,"code":"var _jsxFileName = \"/Users/adarshkumar/weather-app/src/components/WeatherComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1\n  },\n  button: {\n    marginLeft: theme.spacing(2)\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4)\n  },\n  weatherItem: {\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1)\n  },\n  loadingIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4)\n  }\n}));\nconst WeatherApp = () => {\n  _s();\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius'); //\n\n  useEffect(() => {\n    // Fetch current location when component mounts\n    fetchCurrentLocation();\n  }, []);\n  const fetchCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        // Reverse geocoding to get city from coordinates\n        axios.get(`http://localhost:5001/reverse-geocode?lat=${latitude}&lon=${longitude}`).then(response => {\n          setLocation(response.data.city);\n        }).catch(error => {\n          console.error('Error fetching current location:', error);\n          setError('Failed to fetch current location. Please enter manually.');\n        });\n      }, error => {\n        console.error('Error getting current position:', error);\n        setError('Failed to fetch current location. Please enter manually.');\n      });\n    } else {\n      setError('Geolocation is not supported by your browser. Please enter manually.');\n    }\n  };\n  const kelvinToCelsius = kelvin => {\n    return kelvin - 273.15;\n  };\n  const kelvinToFahrenheit = kelvin => {\n    return kelvin * 9 / 5 - 459.67;\n  };\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit(prevUnit => prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius');\n  };\n  const aggregateDailyTemperatures = list => {\n    const dailyTemperatures = {};\n\n    // Loop through the forecast data\n    list.forEach(item => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0]; // Extract date without time\n\n      // Check if the date key exists in the dailyTemperatures object\n      if (!dailyTemperatures[dateKey]) {\n        // If not, initialize an object for the date\n        dailyTemperatures[dateKey] = {\n          max: -Infinity,\n          // Initialize max temperature to negative infinity\n          min: Infinity // Initialize min temperature to positive infinity\n        };\n      }\n\n      // Update max temperature if current temperature is higher\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n\n      // Update min temperature if current temperature is lower\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n    return dailyTemperatures;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      align: \"center\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        fetchCurrentLocation();\n      },\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Enter city or coordinates\",\n        variant: \"outlined\",\n        fullWidth: true,\n        className: classes.textField,\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: classes.button,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      align: \"center\",\n      className: classes.weatherItem,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.loadingIndicator,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), currentWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.weatherItem,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Temperature: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C' : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          children: [\"Description: \", currentWeather.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.weatherContainer,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"5-Day Weather Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        justify: \"center\",\n        children: Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.weatherItem,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"h6\",\n              children: new Date(date).toLocaleDateString('en-US', {\n                weekday: 'short'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: [\"Max: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              children: [\"Min: \", temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)\n        }, date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: toggleTemperatureUnit,\n        children: [\"Toggle Temperature Unit (\", temperatureUnit, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherApp, \"+FqrSb71mnuCLHwTOKysWKnzozc=\", false, function () {\n  return [useStyles];\n});\n_c = WeatherApp;\nexport default WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","TextField","Button","Typography","makeStyles","Grid","CircularProgress","jsxDEV","_jsxDEV","useStyles","theme","form","marginTop","spacing","marginBottom","display","alignItems","textField","marginRight","flex","button","marginLeft","weatherContainer","weatherItem","padding","border","borderRadius","loadingIndicator","justifyContent","WeatherApp","_s","classes","location","setLocation","forecast","setForecast","error","setError","currentWeather","setCurrentWeather","loading","setLoading","temperatureUnit","setTemperatureUnit","fetchCurrentLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","city","catch","console","kelvinToCelsius","kelvin","kelvinToFahrenheit","toggleTemperatureUnit","prevUnit","aggregateDailyTemperatures","list","dailyTemperatures","forEach","item","forecastDate","Date","dt","dateKey","toISOString","split","max","Infinity","min","main","temp_max","temp_min","maxWidth","children","variant","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","className","label","fullWidth","value","onChange","target","color","type","temp","toFixed","weather","description","container","justify","Object","entries","map","date","temperatures","toLocaleDateString","weekday","style","textAlign","onClick","_c","$RefreshReg$"],"sources":["/Users/adarshkumar/weather-app/src/components/WeatherComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, makeStyles, Grid, CircularProgress } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n  },\n  textField: {\n    marginRight: theme.spacing(2),\n    flex: 1,\n  },\n  button: {\n    marginLeft: theme.spacing(2),\n  },\n  weatherContainer: {\n    marginTop: theme.spacing(4),\n  },\n  weatherItem: {\n    padding: theme.spacing(2),\n    border: '1px solid #ccc',\n    borderRadius: theme.spacing(1),\n  },\n  loadingIndicator: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(4),\n  },\n}));\n\nconst WeatherApp = () => {\n  const classes = useStyles();\n  const [location, setLocation] = useState('');\n  const [forecast, setForecast] = useState(null);\n  const [error, setError] = useState('');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [temperatureUnit, setTemperatureUnit] = useState('Celsius'); //\n\n  useEffect(() => {\n    // Fetch current location when component mounts\n    fetchCurrentLocation();\n  }, []);\n\n  const fetchCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        // Reverse geocoding to get city from coordinates\n        axios.get(`http://localhost:5001/reverse-geocode?lat=${latitude}&lon=${longitude}`)\n          .then((response) => {\n            setLocation(response.data.city);\n          })\n          .catch((error) => {\n            console.error('Error fetching current location:', error);\n            setError('Failed to fetch current location. Please enter manually.');\n          });\n      }, (error) => {\n        console.error('Error getting current position:', error);\n        setError('Failed to fetch current location. Please enter manually.');\n      });\n    } else {\n      setError('Geolocation is not supported by your browser. Please enter manually.');\n    }\n  };\n  \n\n  const kelvinToCelsius = (kelvin) => {\n    return kelvin - 273.15;\n  };\n\n  const kelvinToFahrenheit = (kelvin) => {\n    return (kelvin * 9) / 5 - 459.67;\n  };\n\n  const toggleTemperatureUnit = () => {\n    setTemperatureUnit(prevUnit => prevUnit === 'Celsius' ? 'Fahrenheit' : 'Celsius');\n  };\n  const aggregateDailyTemperatures = (list) => {\n    const dailyTemperatures = {};\n  \n    // Loop through the forecast data\n    list.forEach((item) => {\n      const forecastDate = new Date(item.dt * 1000);\n      const dateKey = forecastDate.toISOString().split('T')[0]; // Extract date without time\n  \n      // Check if the date key exists in the dailyTemperatures object\n      if (!dailyTemperatures[dateKey]) {\n        // If not, initialize an object for the date\n        dailyTemperatures[dateKey] = {\n          max: -Infinity, // Initialize max temperature to negative infinity\n          min: Infinity, // Initialize min temperature to positive infinity\n        };\n      }\n  \n      // Update max temperature if current temperature is higher\n      if (item.main.temp_max > dailyTemperatures[dateKey].max) {\n        dailyTemperatures[dateKey].max = item.main.temp_max;\n      }\n  \n      // Update min temperature if current temperature is lower\n      if (item.main.temp_min < dailyTemperatures[dateKey].min) {\n        dailyTemperatures[dateKey].min = item.main.temp_min;\n      }\n    });\n  \n    return dailyTemperatures;\n  };\n  \n  \n\n\n  \n\n  return (\n    <Container maxWidth=\"md\">\n      <Typography variant=\"h3\" gutterBottom align=\"center\">Weather App</Typography>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetchCurrentLocation();\n        }}\n        className={classes.form}\n      >\n        <TextField\n          label=\"Enter city or coordinates\"\n          variant=\"outlined\"\n          fullWidth\n          className={classes.textField}\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          className={classes.button}\n        >\n          Get Weather\n        </Button>\n      </form>\n      {error && <Typography color=\"error\" align=\"center\" className={classes.weatherItem}>{error}</Typography>}\n      {loading && (\n        <div className={classes.loadingIndicator}>\n          <CircularProgress />\n        </div>\n      )}\n      {currentWeather && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">Current Weather</Typography>\n          <div className={classes.weatherItem}>\n            <Typography align=\"center\">Temperature: {temperatureUnit === 'Celsius' ? kelvinToCelsius(currentWeather.main.temp).toFixed(2) + '°C' : kelvinToFahrenheit(currentWeather.main.temp).toFixed(2) + '°F'}</Typography>\n            <Typography align=\"center\">Description: {currentWeather.weather[0].description}</Typography>\n          </div>\n        </div>\n      )}\n      {forecast && (\n        <div className={classes.weatherContainer}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">5-Day Weather Forecast</Typography>\n          <Grid container spacing={3} justify=\"center\">\n            {Object.entries(aggregateDailyTemperatures(forecast.list)).map(([date, temperatures]) => (\n              <Grid item key={date}>\n                <div className={classes.weatherItem}>\n                  <Typography align=\"center\" variant=\"h6\">{new Date(date).toLocaleDateString('en-US', { weekday: 'short' })}</Typography>\n                  <Typography align=\"center\">{date}</Typography>\n                  <Typography align=\"center\">Max: {temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.max).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.max).toFixed(2) + '°F'}</Typography>\n                  <Typography align=\"center\">Min: {temperatureUnit === 'Celsius' ? kelvinToCelsius(temperatures.min).toFixed(2) + '°C' : kelvinToFahrenheit(temperatures.min).toFixed(2) + '°F'}</Typography>\n                </div>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      )}\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\n        <Button variant=\"outlined\" color=\"primary\" onClick={toggleTemperatureUnit}>\n          Toggle Temperature Unit ({temperatureUnit})\n        </Button>\n      </div>\n    </Container>\n  );\n};\n\nexport default WeatherApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}